# CMakeList.txt: 顶层 CMake 项目文件，在此处执行全局配置
# 并包含子项目。
#
cmake_minimum_required (VERSION 3.8)

# Enable Hot Reload for MSVC compilers if supported.
if (POLICY CMP0141)
  cmake_policy(SET CMP0141 NEW)
  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "$<IF:$<AND:$<C_COMPILER_ID:MSVC>,$<CXX_COMPILER_ID:MSVC>>,$<$<CONFIG:Debug,RelWithDebInfo>:EditAndContinue>,$<$<CONFIG:Debug,RelWithDebInfo>:ProgramDatabase>>")
endif()

# project ("CMAKE" VERSION 1.2.3.4)
project ("CMAKE" VERSION 3.8)

message( STATUS "CMAKE_PROJECT_NAME    = ${CMAKE_PROJECT_NAME}" )
message( STATUS "PROJECT_VERSION_MAJOR = ${PROJECT_VERSION_MAJOR}" )
message( STATUS "PROJECT_VERSION_MINOR = ${PROJECT_VERSION_MINOR}" )
message( STATUS "PROJECT_VERSION_PATCH = ${PROJECT_VERSION_PATCH}" )
message( STATUS "PROJECT_VERSION_TWEAK = ${PROJECT_VERSION_TWEAK}" )
message( STATUS "PROJECT_HOMEPAGE_URL = ${PROJECT_HOMEPAGE_URL}")
message( STATUS "CMAKE_PROJECT_DESCRIPTION = ${CMAKE_PROJECT_DESCRIPTION}" )
message( STATUS "CMAKE_SYSTEM = ${CMAKE_SYSTEM}" )
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    MESSAGE(STATUS "current platform: Linux ")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    MESSAGE(STATUS "current platform: Windows")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Android")
    MESSAGE(STATUS "current platform: Android")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Darwin")
    MESSAGE(STATUS "current platform: Darwin")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Emscripten")
    MESSAGE(STATUS "current platform: Emscripten")
ELSE ()
    MESSAGE(STATUS "other platform: ${CMAKE_SYSTEM_NAME}")
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")

set(VAR_MAIN "VAR_MAIN_TEST")
# 包含子项目。
#add_subdirectory ("callback_test")
#add_subdirectory ("thread_test")
#add_subdirectory ("cmake_test")
#add_subdirectory ("h264Decoder_test")
#add_subdirectory ("sdl_test")
#add_subdirectory ("socket_server_test")
#add_subdirectory ("socket_client_test")
#add_subdirectory ("rtsp_server_test")
#add_subdirectory ("socket_udp_server_test")
#add_subdirectory ("socket_udp_client_test")
#add_subdirectory ("select_test")
#add_subdirectory ("libevent_test")
#add_subdirectory ("opengl_test")
#add_subdirectory ("opengl_test2")
#add_subdirectory ("dxgi_test")
#add_subdirectory ("dxgi_record_test")
#add_subdirectory ("audio_test")
#add_subdirectory ("jsoncpp_test")
#add_subdirectory ("windows_test")
#add_subdirectory ("windows_attack_test")
#add_subdirectory ("hellojni")
#add_subdirectory ("hellojnilib")
#add_subdirectory ("msvc_dll")
#add_subdirectory ("msvc_dll_test")
#add_subdirectory ("msvc_lib")
#add_subdirectory ("msvc_lib_test")
#add_subdirectory ("cplusplus")
#add_subdirectory ("python_dll")
#add_subdirectory ("python_call")
#add_subdirectory ("lang_file_read")
#add_subdirectory ("win_api")
#add_subdirectory ("easyx_test")
#add_subdirectory ("audio_win_test")
#add_subdirectory ("boost_test")
#add_subdirectory ("pack")
#add_subdirectory ("pack_test")
#add_subdirectory ("vcpkg-zlib")
#add_subdirectory ("vcpkg-grpc")
add_subdirectory ("vcpkg-grpc-v2")